<node xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="https://www.alljoyn.org/schemas/introspect.xsd">
    <interface name="org.alljoyn.Bus.Security2.ManagedApplication">
        <annotation name="org.alljoyn.Bus.Secure" value="on"/>

        <description>The ManagedApplication interface is provided by claimed
            applications and allows them to be managed.</description>

        <struct name="PublicKey">
            <description>A struct providing the details of an Elliptic Curve
                public key.</description>
            <field name="algorithm" type="y">
                <description>
                    An enumeration describing the key type:
                      0: ECDSA with SHA256
                </description>
            </field>
            <field name="curveIdentifier" type="y">
                <description>
                    An Enumeration identifying the curve this key is using.
                      0: NIST P-256
                </description>
            </field>
            <field name="xCoordinate" type="ay">
                <description>The X coordinate of the public key.</description>
            </field>
            <field name="yCoordinate" type="ay">
                <description>The Y coordinate of the public key.</description>
            </field>
        </struct>

        <struct name="Member">
            <description>A struct describing a member of an interface and the
                access rights on it.</description>
            <field name="name" type="s">
                <description>The name of the interface member. The '*' matches
                    all members of type.
                </description>
            </field>
            <field name="type" type="y">
                <description>
                    An Enumeration describing the type of the member. Values:
                      0: Any type.
                      1: Method.
                      2: Signal
                      3: property
                </description>
            </field>
            <field name="action" type="y">
                <description>
                    An bitmask describing the action on the member. Values:
                      0x1: Denied. Access on this member is explicit denied
                      0x2: Provide. Allows sending signals and/or exposing
                           methods and properties.
                      0x4: Observe: Allows receiving signals and read properties.
                      0x8: Modify: allows to set properties and to make method
                           calls.
                </description>
            </field>
        </struct>

        <struct name="Rule">
            <field name="objectPath" type="s">
                <description>contains the object path on which the rule applies.
                    An empty object path is allowed. In that case the rules apply
                    on all matching interfaces.
                </description>
            </field>
            <field name="interfaceName" type="s">
                <description>contains the interface name on which the rule applies.
                    An empty interfaceName is allowed, if the objectPath is set.
                    The '*' character is allowed at the end of the interface name.
                    The interface name is then considered a prefix. The rule
                    applies to all interfaces names starting with the prefix.
                </description>
            </field>
            <field name="members" type="a[Member]"/>
        </struct>

        <property name="Version" access="read" type="q">
            <description>The Interface version.</description>
        </property>

        <property name="State" access="read" type="q">
             <description> An enumeration representing the current state of the
                 application.  Values:
                   0: Not claimable.  The application is not claimed and not
                      accepting claim request.
                   1: Claimable. The application is not claimed, but is
                      accepting claim request.
                   2: Claimed. The application is claimed and can be configured.
                   3: Update. The application is claimed, but requires a
                      configuration update (after a software upgrade).
            </description>
        </property>

        <property name="ManifestDigest" access="read" type="ay">
            <description> The SHA256 digest of the manifest. This property is
                not evented as we assume nobody will keep a session alive to
                receive change events on this property.
            </description>
        </property>

        <method name="GetPublicKey">
            <arg name="publicKey" type="[PublicKey]" direction="out">
                <description>
                    The public key used by this application to identify itself.
                </description>
            </arg>
        </method>
        <method name="GetManifest">
             <description>Returns the permissions expressed as rules this
                 application requires to operate.
             </description>
             <arg name="manifest" type="a[Rule]" direction="out"/>
        </method>
    </interface>
</node>

